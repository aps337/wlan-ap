Index: hostapd-2021-02-20-59e9794c/hostapd/config_file.c
===================================================================
--- hostapd-2021-02-20-59e9794c.orig/hostapd/config_file.c
+++ hostapd-2021-02-20-59e9794c/hostapd/config_file.c
@@ -2741,6 +2741,11 @@ static int hostapd_config_fill(struct ho
 				   line);
 			return 1;
 		}
+	} else if (os_strcmp(buf, "global_max_num_sta") == 0) {
+		conf->global_max_num_sta = atoi(pos);
+		if (conf->global_max_num_sta < 0 ||
+		    conf->global_max_num_sta > MAX_STA_COUNT)
+			conf->global_max_num_sta = MAX_STA_COUNT;
 	} else if (os_strcmp(buf, "max_num_sta") == 0) {
 		bss->max_num_sta = atoi(pos);
 		if (bss->max_num_sta < 0 ||
Index: hostapd-2021-02-20-59e9794c/src/ap/ap_config.c
===================================================================
--- hostapd-2021-02-20-59e9794c.orig/src/ap/ap_config.c
+++ hostapd-2021-02-20-59e9794c/src/ap/ap_config.c
@@ -224,6 +224,8 @@ struct hostapd_config * hostapd_config_d
 
 	conf->num_bss = 1;
 
+	conf->global_max_num_sta = 0;
+
 	conf->beacon_int = 100;
 	conf->rts_threshold = -2; /* use driver default: 2347 */
 	conf->fragm_threshold = -2; /* user driver default: 2346 */
Index: hostapd-2021-02-20-59e9794c/src/ap/ap_config.h
===================================================================
--- hostapd-2021-02-20-59e9794c.orig/src/ap/ap_config.h
+++ hostapd-2021-02-20-59e9794c/src/ap/ap_config.h
@@ -1118,6 +1118,7 @@ struct hostapd_config {
 	unsigned int airtime_update_interval;
 #define AIRTIME_MODE_MAX (__AIRTIME_MODE_MAX - 1)
 #endif /* CONFIG_AIRTIME_POLICY */
+	int global_max_num_sta;
 };
 
 static inline u8 hostapd_get_he_6ghz_reg_pwr_type(struct hostapd_config *conf)
Index: hostapd-2021-02-20-59e9794c/src/ap/hostapd.c
===================================================================
--- hostapd-2021-02-20-59e9794c.orig/src/ap/hostapd.c
+++ hostapd-2021-02-20-59e9794c/src/ap/hostapd.c
@@ -4025,3 +4025,15 @@ void hostapd_ocv_check_csa_sa_query(void
 	}
 }
 #endif /* CONFIG_OCV */
+
+int hapd_check_max_sta(struct hostapd_data *hapd)
+{
+	int cnt = 0, i;
+
+	if (!hapd->iconf->global_max_num_sta)
+		return hapd->num_sta >= hapd->conf->max_num_sta;
+
+	for (i = 0; i < hapd->iface->num_bss; i++)
+		cnt += hapd->iface->bss[i]->num_sta;
+	return cnt >= hapd->iconf->global_max_num_sta;
+}
Index: hostapd-2021-02-20-59e9794c/src/ap/hostapd.h
===================================================================
--- hostapd-2021-02-20-59e9794c.orig/src/ap/hostapd.h
+++ hostapd-2021-02-20-59e9794c/src/ap/hostapd.h
@@ -721,4 +721,6 @@ void fst_hostapd_fill_iface_obj(struct h
 				struct fst_wpa_obj *iface_obj);
 #endif /* CONFIG_FST */
 
+int hapd_check_max_sta(struct hostapd_data *hapd);
+
 #endif /* HOSTAPD_H */
Index: hostapd-2021-02-20-59e9794c/src/ap/sta_info.c
===================================================================
--- hostapd-2021-02-20-59e9794c.orig/src/ap/sta_info.c
+++ hostapd-2021-02-20-59e9794c/src/ap/sta_info.c
@@ -740,7 +740,8 @@ struct sta_info * ap_sta_add(struct host
 		return sta;
 
 	wpa_printf(MSG_DEBUG, "  New STA");
-	if (hapd->num_sta >= hapd->conf->max_num_sta) {
+	if (hapd_check_max_sta(hapd)) {
+//	if (hapd->num_sta >= hapd->conf->max_num_sta) {
 		/* FIX: might try to remove some old STAs first? */
 		wpa_printf(MSG_DEBUG, "no more room for new STAs (%d/%d)",
 			   hapd->num_sta, hapd->conf->max_num_sta);
