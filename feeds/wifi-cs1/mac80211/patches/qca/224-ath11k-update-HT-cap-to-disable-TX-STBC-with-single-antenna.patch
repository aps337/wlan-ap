Index: backports-20210222_001-4.4.60-b157d2276/drivers/net/wireless/ath/ath11k/mac.c
===================================================================
--- backports-20210222_001-4.4.60-b157d2276.orig/drivers/net/wireless/ath/ath11k/mac.c
+++ backports-20210222_001-4.4.60-b157d2276/drivers/net/wireless/ath/ath11k/mac.c
@@ -5459,7 +5459,8 @@ exit:
 }
 
 static struct ieee80211_sta_ht_cap
-ath11k_create_ht_cap(struct ath11k *ar, u32 ar_ht_cap, u32 rate_cap_rx_chainmask)
+ath11k_create_ht_cap(struct ath11k *ar, u32 ar_ht_cap,
+		     u32 rate_cap_tx_chainmask, u32 rate_cap_rx_chainmask)
 {
 	int i;
 	struct ieee80211_sta_ht_cap ht_cap = {0};
@@ -5490,7 +5491,7 @@ ath11k_create_ht_cap(struct ath11k *ar,
 		ht_cap.cap |= smps;
 	}
 
-	if (ar_ht_cap & WMI_HT_CAP_TX_STBC)
+	if ((ar_ht_cap & WMI_HT_CAP_TX_STBC) && (rate_cap_tx_chainmask > 1))
 		ht_cap.cap |= IEEE80211_HT_CAP_TX_STBC;
 
 	if (ar_ht_cap & WMI_HT_CAP_RX_STBC) {
@@ -5675,6 +5676,7 @@ static void ath11k_mac_setup_ht_vht_cap(
 		if (ht_cap_info)
 			*ht_cap_info = ht_cap;
 		band->ht_cap = ath11k_create_ht_cap(ar, ht_cap,
+						    rate_cap_tx_chainmask,
 						    rate_cap_rx_chainmask);
 
 		band->vht_cap = ath11k_create_vht_cap(ar, rate_cap_tx_chainmask,
@@ -5687,10 +5689,25 @@ static void ath11k_mac_setup_ht_vht_cap(
 		if (ht_cap_info)
 			*ht_cap_info = ht_cap;
 		band->ht_cap = ath11k_create_ht_cap(ar, ht_cap,
+						    rate_cap_tx_chainmask,
 						    rate_cap_rx_chainmask);
 		band->vht_cap = ath11k_create_vht_cap(ar, rate_cap_tx_chainmask,
 						      rate_cap_rx_chainmask);
 	}
+
+	if (ar->hw->wiphy->bands[NL80211_BAND_5GHZ]) {
+		ar->hw->wiphy->bands[NL80211_BAND_5GHZ]->ht_cap.cap =
+			ar->mac.sbands[NL80211_BAND_5GHZ].ht_cap.cap;
+		ar->hw->wiphy->bands[NL80211_BAND_5GHZ]->vht_cap.cap =
+			ar->mac.sbands[NL80211_BAND_5GHZ].vht_cap.cap;
+	}
+	if (ar->hw->wiphy->bands[NL80211_BAND_2GHZ]) {
+		ar->hw->wiphy->bands[NL80211_BAND_2GHZ]->ht_cap.cap =
+			ar->mac.sbands[NL80211_BAND_2GHZ].ht_cap.cap;
+		ar->hw->wiphy->bands[NL80211_BAND_2GHZ]->vht_cap.cap =
+			ar->mac.sbands[NL80211_BAND_2GHZ].vht_cap.cap;
+	}
+
 }
 
 static int ath11k_check_chain_mask(struct ath11k *ar, u32 ant, bool is_tx_ant)
