From b8a0653c16c40c66c1701fa2a274d47544892680 Mon Sep 17 00:00:00 2001
From: Arif Alam <arif.alam@netexperience.com>
Date: Thu, 23 Sep 2021 23:33:42 -0400
Subject: [PATCH] Lockless skb_queue_len

---
 .../114-add_skb_queue_len_lockless.patch      | 21 +++++++++++++++++++
 1 file changed, 21 insertions(+)
 create mode 100644 target/linux/ipq807x/patches/114-add_skb_queue_len_lockless.patch

diff --git a/target/linux/ipq807x/patches/114-add_skb_queue_len_lockless.patch b/target/linux/ipq807x/patches/114-add_skb_queue_len_lockless.patch
new file mode 100644
index 0000000000..b47bf95cb7
--- /dev/null
+++ b/target/linux/ipq807x/patches/114-add_skb_queue_len_lockless.patch
@@ -0,0 +1,21 @@
+--- a/include/linux/skbuff.h
++++ b/include/linux/skbuff.h
+@@ -1449,6 +1449,18 @@ static inline __u32 skb_queue_len(const
+ }
+ 
+ /**
++ *      skb_queue_len_lockless  - get queue length
++ *      @list_: list to measure
++ *
++ *      Return the length of an &sk_buff queue.
++ *      This variant can be used in lockless contexts.
++ */
++static inline __u32 skb_queue_len_lockless(const struct sk_buff_head *list_)
++{
++        return READ_ONCE(list_->qlen);
++}
++
++/**
+  *	__skb_queue_head_init - initialize non-spinlock portions of sk_buff_head
+  *	@list: queue to initialize
+  *
-- 
2.25.1

